Dès qu'il y a la moindre ligne de php dans le code html, votre fichier doit avoir l'extension .php

Ecrire du code PHP : <?php codePHP... ?>
Dans un fichier 100% php (sans html), une bonne pratique est d'enlever la balise de fin ?>.

Les variables en PHP doivent commencer par un $ et peuvent contenir n'importe quel type
exemple : $variable = contenu;

Définir une constante : define("NOM_CONSTANTE", "valeur");

Afficher du texte : echo "votre texte ici";
Au lieu parfois de taper <?php echo "message"; ?>, on peut utiliser les shorts open tags : <?="message"?>

Concaténation : .
Afficher du texte : echo "contenu";
Dans la fonction date() pour récupérer la date du jour, le "d"  = le jour, le "m" = le mois, le "Y" = année

is_numeric($variable) : Teste si $variable est un numérique (retour 1 si true, retourne rien si false)
rand(debut,fin) : Renvoie un nombre aléatoire situé entre debut et fin

Quelques fonctions pour les chaines de caractère :
-ucfirst($chaine) : mettre la première lettre de la chaine en majuscules
-ucwords($chaine) : mettre la première lettre de chaque mots de la chaine en majuscules
-strtolower($chaine) : mettre la chaine en minuscules
-strtoupper($chaine) : mettre la chaine en majuscules

Création d'une variable tableau : $tab = array(val1, val2, val3....);
Afficher une variable tableau sous forme de texte pour le débogage : print_r($tab);  L'entourer de balises <pre></pre> pour un affichage plus clair(modifié)
count($tab) : compte et renvoie le nombre d'éléments dans le tableau(modifié)
min($tab) et max($tab) : retourne le minimum et le maximum d'un tableau
Trier un tableau : sort($tab)
Trier un tableau dans l'ordre inverse : rsort($tab)

Redirection directe : header('location:lien');
Redirection après x secondes : header('refresh:x;url=lien');

Connexion SQL : $con = mysqli_connect('ip', 'user', 'mdp', 'bdd'); // ip correspond à l'adresse du serveur où est installé MySQL
Connexion avec PDO : $bdd = new PDO('DSN','user','password', array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION)); // DSN (Data Source Name diffère en fonction du SGBD utilisé)
Exemple PDO MySQL : $bdd = new PDO('mysql:host=localhost;dbname=test;charset=utf8', 'root','', array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION));

$req = "ECRIRE LA REQUETE ICI";

Execution d'une requête : 
INSERT / UPDATE / DELETE : mysqli_query($con, $req); 
SELECT : $data = mysqli_query($con, $req);

parcourir les données d'un renvoie de requete : while($donnees = mysqli_fetch_assoc($data))
avoir le nombre de lignes retournées par une requete : mysqli_num_rows($data);

Tester l'existence d'une variable : isset()
Tester si une variable n'est pas vide : !empty()

Démarrer une session : session_start(); // au début de tout code html, à dupliquer sur toutes les pages d'un site
Fermer une session : session_destroy(); // après un session_start
Créer une variable session : $_SESSION['nom'] = valeur;

Transmettre des données d'une page à l'autre :
	
Par lien : $_GET['nom'] = valeur; // retour des &nom=valeur dans l'url
Par formulaire : $_POST['nom'] = valeur; // le nom est le retour de l'attribut 'name' et la valeur l'attribut 'value' ou ce qui est rempli dans le champs

extract($_POST) : créer des variables ayant le même nom que les éléments du $_POST afin de faciliter l'écriture dans le code

Crypter un mot de passe pour l'inscription : $cryptedPass = password_hash($password, PASSWORD_DEFAULT);
Vérification du mot de passe pour la connexion : password_verify($password, $cryptedPass); // renvoie true ou false

Mettre php_flag output_buffering on
 dans le .htaccess si il y a des problèmes avec les sessions sur un hébergeur tel que 000webhost.

==========================


PHPMailer : Librairie PHP d'envoie de mail

<?php 
require 'PHPMailerAutoload.php';
$mail = new PHPMailer;
$mail->setFrom('adresseExpediteur', 'nomExpediteur');
$mail->addAdress('adresseDestinataire', 'nomDestinataire');
$mail->Subject = 'sujet';
$mail->Body = 'Message';

if(!$mail->send())
{
	echo "Le message n'a pas été envoyé.";
	echo "Erreur retournée : " . $mail->ErrorInfo;

} else {
	echo "Le message a bien été envoyé !";

} ?>

Attacher un fichier :

$mail->addAttachment($path, $name, $encoding, $type); // $path contient le lien local vers le fichier et est obligatoire
Les trois autres arguments sont facultatifs : $name le nom, $encoding est base64 par défaut, $type est le type MIME

$mail->addStringAttachment($donnees, $name, $encoding, $type); // même chose qu'au dessus

Envoyer un email en format html :

$mail->isHTML(true);
$mail->AltBody = 'Message en texte brut pour les clients mail qui ne lisent pas le HTML';
